/*Description : CR for mail and sms trigger
 *Added By : Aditya.rai
 *Date : 11-04-23    
 */
package com.newgen.iforms.user;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.Reader;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.json.simple.JSONArray;
import java.util.List;

import javax.print.DocFlavor.STRING;

import org.json.simple.JSONObject;

import com.newgen.custom.XMLParser;
import com.newgen.iforms.custom.IFormReference;

public class CSR_OCC_Email extends CSR_OCCCommon {
	public static String mailTrigger(IFormReference iform, String stage, String data) {
		try {
			CSR_OCC.mLogger.debug("Inside mailTrigger method----------->");
			CSR_OCC.mLogger.debug("data-----------> " + data);
			String[] param = data.split("-");
			// declare all variable
			String date = getDate();
			String tag = "";
			String WI_No = (String) iform.getValue("wi_name");
			CSR_OCC.mLogger.debug("WI_No----------->" + WI_No);
			String split_WI_No = splitString(WI_No);
			CSR_OCC.mLogger.debug("split_WI_No----------->" + split_WI_No);
			String Card_No = param[0];
			CSR_OCC.mLogger.debug("Card_No----------->" + Card_No);
			String lastDigitCard_No = Card_No.substring(12, 16);
			CSR_OCC.mLogger.debug("lastDigitCard_No----------->" + lastDigitCard_No);
			String subProcessName = (String) iform.getValue("request_type");
			CSR_OCC.mLogger.debug("subProcessName----------->" + subProcessName);
			String SupplAmount = (String) iform.getValue("oth_ssc_Amount_Text");
			CSR_OCC.mLogger.debug("SupplAmount----------->" + SupplAmount);
			String getCustMail = "Select userEmailID FROM RB_CSR_OCC_EXTTABLE WHERE WI_NAME = '" + WI_No + "'";
			List<List<String>> Query_data1 = iform.getDataFromDB(getCustMail);
			String CustMail = Query_data1.get(0).get(0);
			CSR_OCC.mLogger.debug("CustMail----------->" + CustMail);
			if (iform.getActivityName().equalsIgnoreCase("CARDS")) {
				String rejectReason = (String) iform.getValue("Cards_Reject");
				CSR_OCC.mLogger.debug("rejectReason--------->" + rejectReason);
				tag = "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in;padding-left:31%; text-align:left;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
						+ rejectReason + "</span></p>" + "\n";
				int size = 0;
				JSONArray str = new JSONArray();
				if (rejectReason.equalsIgnoreCase("Others")) {
					String OthersrejectReason = (String) iform.getValue("Others_Reject_Reason");// param[2];
					CSR_OCC.mLogger.debug("OthersrejectReason----------->" + OthersrejectReason);
					tag = "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in;padding-left:31%; text-align:left;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
							+ OthersrejectReason + "</span></p>" + "\n";
				} else if (rejectReason.equalsIgnoreCase("Due to non receipt of")) {
					str = (JSONArray) iform.getValue("USR_0_CSR_OCC_REJECT_SUB_REASON");
					size = str.size();
					tag = "";
					for (int i = 0; i < size; i++) {
						String reason = (String) str.get(i);
						tag = tag
								+ "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
								+ reason + "</span></p>" + "\n";
					}
				}
			} else if (iform.getActivityName().equalsIgnoreCase("Pending")) {
				String rejectReason = (String) iform.getValue("Pending_Reason");
				CSR_OCC.mLogger.debug("rejectReason--------->" + rejectReason);
				tag = "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
						+ rejectReason + "</span></p>" + "\n";
				int size = 0;
				JSONArray str = new JSONArray();
				if (rejectReason.equalsIgnoreCase("Others")) {
					String OthersrejectReason = (String) iform.getValue("Others_Pending_SubReason");
					CSR_OCC.mLogger.debug("OthersrejectReason----------->" + OthersrejectReason);
					tag = "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
							+ OthersrejectReason + "</span></p>" + "\n";
				} else if (rejectReason.equalsIgnoreCase("Due to non receipt of")) {
					str = (JSONArray) iform.getValue("USR_0_CSR_OCC_PENDING_SUB");
					size = str.size();
					tag = "";
					for (int i = 0; i < size; i++) {
						String reason = (String) str.get(i);
						tag = tag
								+ "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
								+ reason + "</span></p>" + "\n";
					}
				}
			} else if (iform.getActivityName().equalsIgnoreCase("Branch_Return")) {
				String rejectReason = (String) iform.getValue("BR_Reject");
				CSR_OCC.mLogger.debug("rejectReason--------->" + rejectReason);
				tag = "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
						+ rejectReason + "</span></p>" + "\n";
				int size = 0;
				JSONArray str = new JSONArray();
				if (rejectReason.equalsIgnoreCase("Others")) {
					String OthersrejectReason = (String) iform.getValue("Others_BR");
					CSR_OCC.mLogger.debug("OthersrejectReason----------->" + OthersrejectReason);
					tag = "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
							+ OthersrejectReason + "</span></p>" + "\n";
				} else if (rejectReason.equalsIgnoreCase("Due to non receipt of")) {
					str = (JSONArray) iform.getValue("USR_0_CSR_OCC_BR_SUB_REASONS");
					size = str.size();
					tag = "";
					for (int i = 0; i < size; i++) {
						String reason = (String) str.get(i);
						tag = tag
								+ "<p class=MsoListParagraphCxSpFirst align=left style=\"margin-bottom:0in; text-align:left;padding-left:31%;text-indent:-.25in;line-height:normal\"><span style=\"font-size:10.0pt;font-family:Symbol\">*<span style=\"font:7.0pt \"Times New Roman\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-size:10.0pt;font-family:\"Verdana\",sans-serif\">"
								+ reason + "</span></p>" + "\n";
					}
				}
			}
			// end
			// String path = System.getProperty("user.dir") + File.separatorChar
			// + "folder name" + File.separatorChar +
			// "RAKBank_Email_Temp" + File.separatorChar +
			// "CSR_OCC_"+stage+".html";
			// String emailBody = readFile(path);
			String Query = "Select * From USR_0_CSR_BT_TemplateMapping where ProcessName = 'CSR_OCC' and TemplateType = '"
					+ stage + "' AND SubProcess = '" + subProcessName + "'";
			List<List<String>> Query_data = iform.getDataFromDB(Query);
			CSR_OCC.mLogger.debug("Query_data----------->" + Query_data);
			if (Query_data.size() > 0) {
				String emailBody = Query_data.get(0).get(2);
				CSR_OCC.mLogger.debug("emailBody before replace" + emailBody);
				if (!emailBody.equalsIgnoreCase("NULL")) {
					emailBody = emailBody.replaceAll("#WI_No#", split_WI_No);
					emailBody = emailBody.replaceAll("#Card_No#", lastDigitCard_No);
					emailBody = emailBody.replaceAll("'Times", "''Times");
					emailBody = emailBody.replaceAll("Roman'", "Roman''");
					emailBody = emailBody.replaceAll("#reject reason#", tag);
					emailBody = emailBody.replaceAll("#Sub_Process_Name#", subProcessName);
					emailBody = emailBody.replaceAll("#DD/MM/YYYY#", date);
					emailBody = emailBody.replaceAll("#Amount#", SupplAmount);
					CSR_OCC.mLogger.debug("emailBody after replace" + emailBody);

					String mailFrom = Query_data.get(0).get(3);
					CSR_OCC.mLogger.debug("mailFrom----->" + mailFrom);
					String mailTo = CustMail; // "test11@rakbanktst.ae"
					String mailSubject = Query_data.get(0).get(6);
					CSR_OCC.mLogger.debug("Mail Subject------>" + mailSubject);
					String mailContentType = "text/html;charset=UTF-8";
					int mailPriority = 1;
					int workitemId = 1;
					int noOfTrials = 1;
					int activityId = 3;
					String mailStatus = "N";
					String mailActionType = "TRIGGER";
					String tableName = "WFMAILQUEUETABLE";
					String columnName = "(mailFrom,mailTo,mailSubject,mailMessage, mailContentType, mailPriority,mailStatus,insertedBy,"
							+ "mailActionType,processInstanceId,workitemId,activityId,noOfTrials)";
					String values = "('" + mailFrom + "','" + mailTo + "','" + mailSubject + "',N'" + emailBody + "','"
							+ mailContentType + "','" + mailPriority + "','" + mailStatus + "','" + getUserName()
							+ "','" + mailActionType + "','" + (iform.getObjGeneralData()).getM_strProcessInstanceId()
							+ "','" + workitemId + "','" + activityId + "','" + noOfTrials + "')";
					String mailInsertQuery = "Insert into " + tableName + " " + columnName + " values " + values;
					CSR_OCC.mLogger.debug("Query to be inserted in table-----------------: " + mailInsertQuery);
					int status = iform.saveDataInDB(mailInsertQuery);
					CSR_OCC.mLogger.debug("Status------------>" + status);
					CSR_OCC.mLogger
							.debug("Mail Triggred successfuly if value of status is 1---------STATUS = " + status);
					if (status == 1)
						return "true";
				}
			}
		} catch (Exception ex) {
			CSR_OCC.mLogger.debug("Some error in mailTrigger " + ex.toString());
			return "false";
		}
		return "false";
	}

	public static String sendSMS(IFormReference iform, String stage, String data) {
		try {
			CSR_OCC.mLogger.debug("inside sendSMScall txtMessagessss");
			CSR_OCC.mLogger.debug("data----->" + data);
			String[] param = data.split("-");

			// Declare all variables
			String WI_No = (String) iform.getValue("wi_name");
			CSR_OCC.mLogger.debug("WI_No------->" + WI_No);
			String split_WI_No = splitString(WI_No);
			CSR_OCC.mLogger.debug("split_WI_No----------->" + split_WI_No);

			String Card_No = param[0];
			CSR_OCC.mLogger.debug("Card_No------->" + Card_No);
			String lastDigitCard_No = Card_No.substring(12, 16);
			CSR_OCC.mLogger.debug("lastDigitCard_No------->" + lastDigitCard_No);

			String pendingReason = (String) iform.getValue("Pending_Reason");
			CSR_OCC.mLogger.debug("pendingReason------->" + pendingReason);

			String subProcessName = (String) iform.getValue("request_type");
			CSR_OCC.mLogger.debug("subProcessName----------->" + subProcessName);

			String SupplAmount = (String) iform.getValue("oth_ssc_Amount_Text");
			CSR_OCC.mLogger.debug("SupplAmount----------->" + SupplAmount);

			String date = getDate();
			String smsLang = "EN";

			// Infobip variables
			String AlertID = "";
			String DynamicTags = "";
			String infobipIsActive = "";
			String CIF = "";

			// Get CIF from external table
			String QueryExTable = "SELECT CIF FROM RB_CSR_OCC_EXTTABLE WHERE wi_name = '" + WI_No + "'";
			CSR_OCC.mLogger.debug("CIF DB Query :" + QueryExTable);
			List<List<String>> QueryExTableList = iform.getDataFromDB(QueryExTable);
			if (QueryExTableList.size() > 0) {
				CIF = QueryExTableList.get(0).get(0);
			}
			CSR_OCC.mLogger.debug("Data from DB CIF :" + CIF);

			String Query = "SELECT * FROM USR_0_CSR_BT_TemplateMapping WHERE ProcessName = 'CSR_OCC' AND TemplateType = '"
					+ stage + "' AND SubProcess = '" + subProcessName + "'";
			List<List<String>> Query_data = iform.getDataFromDB(Query);
			CSR_OCC.mLogger.debug("Query_data------->" + Query_data);

			if (Query_data.size() > 0) {
				String txtMessage = Query_data.get(0).get(5);
				infobipIsActive = Query_data.get(0).get(10);
				AlertID = Query_data.get(0).get(8);
				DynamicTags = Query_data.get(0).get(9);

				CSR_OCC.mLogger.debug("infobip is Active " + infobipIsActive);
				CSR_OCC.mLogger.debug("infobip Alert ID " + AlertID);
				CSR_OCC.mLogger.debug("infobip Dynamic Tags " + DynamicTags);

				if (!txtMessage.equalsIgnoreCase("NULL") && infobipIsActive.equalsIgnoreCase("N")) {
					CSR_OCC.mLogger.debug("txtMessage before replace" + txtMessage);
					txtMessage = txtMessage.replaceAll("#WI_No#", split_WI_No);
					txtMessage = txtMessage.replaceAll("#Card_No#", lastDigitCard_No);
					txtMessage = txtMessage.replaceAll("#CancellationReason#", pendingReason);
					txtMessage = txtMessage.replaceAll("#DD/5MM/YYYY#", date);
					txtMessage = txtMessage.replaceAll("#Sub_Process_Name#", subProcessName);
					txtMessage = txtMessage.replaceAll("#Amount#", SupplAmount);

					CSR_OCC.mLogger.debug("txtMessage after replace" + txtMessage);
					
					CSR_OCC.mLogger.debug("Wi number " + split_WI_No);
					CSR_OCC.mLogger.debug("Card Number " + lastDigitCard_No);
					CSR_OCC.mLogger.debug("Cancellation  Reason" + pendingReason);
					CSR_OCC.mLogger.debug("Date" + date);
					CSR_OCC.mLogger.debug("Sub_Process_Name" + subProcessName);
					CSR_OCC.mLogger.debug("Amount" + SupplAmount);
					

					String tableName = "NG_RLOS_SMSQUEUETABL";
					String ALERT_Name = stage;
					String Alert_Code = "CSR_OCC";
					String Alert_Status = "P";
					String Mobile_No = param[1];
					CSR_OCC.mLogger.debug("Mobile no--------->" + Mobile_No);
					String Workstep_Name = (String) iform.getActivityName();

					String columnName = "(ALERT_Name, Alert_Code, Alert_Status, Mobile_No, Alert_Text, WI_Name, Workstep_Name, Inserted_Date_time)";
					String values = "('" + ALERT_Name + "','" + Alert_Code + "','" + Alert_Status + "','" + Mobile_No
							+ "','" + txtMessage + "','" + WI_No + "','" + Workstep_Name + "', getdate() )";
					String SMSInsertQuery = "INSERT INTO " + tableName + " " + columnName + " VALUES " + values;

					CSR_OCC.mLogger.debug("Query to be inserted in table-----------------: " + SMSInsertQuery);
					int status = iform.saveDataInDB(SMSInsertQuery);
					CSR_OCC.mLogger
							.debug("SMS Triggered successfully if value of status is 1-------------STATUS = " + status);
					if (status == 1)
						return "true";
				} else if (infobipIsActive.equalsIgnoreCase("Y")) {
					CSR_OCC.mLogger.debug("txtMessage before replace" + txtMessage);
			          txtMessage = txtMessage.replaceAll("#WI_No#", split_WI_No);
			          txtMessage = txtMessage.replaceAll("#Card_No#", lastDigitCard_No);
			          txtMessage = txtMessage.replaceAll("#CancellationReason#", pendingReason);
			          txtMessage = txtMessage.replaceAll("#DD/5MM/YYYY#", date);
			          //txtMessage = txtMessage.replaceAll("#Sub_Process_Name#", subProcessName);
			          txtMessage = txtMessage.replaceAll("#Amount#", SupplAmount);
			          if("Setup Suppl. Card Limit".equalsIgnoreCase(subProcessName)){
							txtMessage = txtMessage.replaceAll("#Sub_Process_Name#", "Setup Supplementary Card Limit");
						}
			          else {
			        	  txtMessage = txtMessage.replaceAll("#Sub_Process_Name#", subProcessName);
			          }
			          CSR_OCC.mLogger.debug("txtMessage after replace" + txtMessage);
					String DynamicValues = "";
					String[] tags = DynamicTags.split("~");
					CSR_OCC.mLogger.debug("Dynamic Tag Arr: " + Arrays.toString(tags));

					List<String> valueList = new ArrayList<>();
					for (String tag1 : tags) {
						String pValue = "";
						switch (tag1.trim()) {
						case "card_No":
							pValue = lastDigitCard_No;
							break;
						case "cARD_CODE":
							pValue = lastDigitCard_No;
							break;
						case "wI_No":
							pValue = split_WI_No;
							break;
						case "wI_NAME":
							pValue = split_WI_No;
							break;
						case "sUB_PROCESS_NAME":
							pValue = subProcessName;
							if("Setup Suppl. Card Limit".equalsIgnoreCase(subProcessName)){
								pValue = "Setup Supplementary Card Limit";
							}
							break;
						case "dDMMYYYY":
							pValue = date;
							break;
						case "amount":
							pValue = SupplAmount;
							break;
						case "cancellationReason":
							pValue = pendingReason;
							break;
						case "sub_Process_Name":
							pValue = subProcessName;
							if("Setup Suppl. Card Limit".equalsIgnoreCase(subProcessName)){
								pValue = "Setup Supplementary Card Limit";
							}
							break;

						}
						valueList.add(pValue);
					}

					DynamicValues = String.join("~#~", valueList);
					CSR_OCC.mLogger.debug("Final List of Dynamic Values: " + valueList);

					String tableName = "USR_0_INFOBIP_SMS_QUEUETABLE";
					String ALERT_Name = stage;
					String ProcessName = "CSR_OCC";
					String Alert_Status = "P";
					String Mobile_No = param[1];
					CSR_OCC.mLogger.debug("Mobile no--------->" + Mobile_No);
					String Workstep_Name = (String) iform.getActivityName();

					String columnName = "(Processname,WI_NAME,AlertID,InsertedDateTime,CIF,Dynamic_Tags,Dynamic_Values,Alert_Status,MobileNumber,SMS_Content)";
					String values = "('" + ProcessName + "','" + WI_No + "','" + AlertID
							+ "',format(getdate(),'yyyy-MM-dd HH:mm:ss.fff'),'" + CIF + "','" + DynamicTags + "','"
							+ DynamicValues + "','" + Alert_Status + "','" + Mobile_No + "','" + txtMessage + "')";
					String SMSInsertQuery = "INSERT INTO " + tableName + " " + columnName + " VALUES " + values;

					CSR_OCC.mLogger.debug("Query to be inserted in table-----------------: " + SMSInsertQuery);
					int status = iform.saveDataInDB(SMSInsertQuery);
					CSR_OCC.mLogger
							.debug("SMS Triggered successfully if value of status is 1-------------STATUS = " + status);
					if (status == 1)
						return "true";
				}
			}
		} catch (Exception ex) {
			CSR_OCC.mLogger.debug("Some error in sendSMScall" + ex.toString());
			return "false";
		}
		return "false";
	}
}
